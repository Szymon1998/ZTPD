--01
CREATE TYPE samochod AS OBJECT (
    marka VARCHAR2(20),
    model VARCHAR2(20),
    kilometry NUMBER,
    data_produkcji DATE,
    cena NUMBER(10,2)
);

CREATE TABLE samochody OF samochod;

INSERT INTO samochody (marka, model, kilometry, data_produkcji, cena) VALUES ('FIAT', 'BRAVA', 60000, TO_DATE('1999-11-30'), 25000);
INSERT INTO samochody (marka, model, kilometry, data_produkcji, cena) VALUES ('FORD', 'MONDEO', 80000, TO_DATE('1997-05-10'), 45000);
INSERT INTO samochody (marka, model, kilometry, data_produkcji, cena) VALUES ('MAZDA', '323', 12000, TO_DATE('2000-09-22'), 52000);  



--02

CREATE TABLE wlasciciele (imie VARCHAR2(100), nazwisko VARCHAR2(100), auto samochod);

INSERT INTO wlasciciele (imie, nazwisko, auto) VALUES ('Jan', 'Kowalski', NEW samochod('FIAT', 'SEICENTO', 30000, TO_DATE('2010-02-12'), 19500));
INSERT INTO wlasciciele (imie, nazwisko, auto) VALUES ('Adam', 'Nowak', NEW samochod('OPEL', 'ASTRA', 34000, TO_DATE('2009-06-01'), 33700));


--03

ALTER TYPE samochod REPLACE AS OBJECT (
    marka VARCHAR2(20),
    model VARCHAR2(20),                        
    kilometry NUMBER,                         
    data_produkcji DATE,                        
    cena number(10,2), 
    MEMBER FUNCTION wartosc RETURN NUMBER
);       

CREATE OR REPLACE TYPE BODY samochod 
IS 
    MEMBER FUNCTION wartosc
    RETURN NUMBER 
    IS 
    v_nowa_cena NUMBER;
    BEGIN
        v_nowa_cena := cena;
        FOR i IN 1 .. (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM data_produkcji)) LOOP
            v_nowa_cena := v_nowa_cena * 0.9;
        END LOOP;
        RETURN ROUND(v_nowa_cena, 2);
    END wartosc;
END;

--04

ALTER TYPE samochod ADD MAP MEMBER FUNCTION odwzoruj RETURN NUMBER CASCADE INCLUDING TABLE DATA;

CREATE OR REPLACE TYPE BODY samochod
IS
    MEMBER FUNCTION wartosc
    RETURN NUMBER 
    IS 
    v_nowa_cena NUMBER;
    BEGIN
        v_nowa_cena := cena;
        FOR i IN 1 .. (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM data_produkcji)) LOOP
            v_nowa_cena := v_nowa_cena * 0.9;
        END LOOP;
        RETURN ROUND(v_nowa_cena, 2);
    END wartosc;
    MAP MEMBER FUNCTION odwzoruj 
    RETURN NUMBER 
    IS
    BEGIN
        RETURN ((EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM data_produkcji)) + (kilometry / 10000));
    END odwzoruj;
END;


--05

CREATE TYPE wlasciciel AS OBJECT (imie VARCHAR2(100), nazwisko VARCHAR2(100));

ALTER TYPE SAMOCHOD ADD ATTRIBUTE R_WLASCICIEL REF WLASCICIEL CASCADE;

CREATE TABLE WLASCICIELE_OBJ OF WLASCICIEL;

INSERT INTO WLASCICIELE_OBJ VALUES('JAN', 'KOWALSKI');
INSERT INTO WLASCICIELE_OBJ VALUES('ADAM', 'NOWAK');

UPDATE SAMOCHODY
SET r_wlasciciel = (SELECT REF(w) FROM WLASCICIELE_OBJ w WHERE w.NAZWISKO = 'KOWALSKI')
WHERE MARKA = 'MAZDA';

UPDATE SAMOCHODY
SET r_wlasciciel = (SELECT REF(w) FROM WLASCICIELE_OBJ w WHERE w.NAZWISKO = 'NOWAK')
WHERE MARKA = 'FIAT';

SELECT s.marka, s.model, s.R_WLASCICIEL.imie, s.R_WLASCICIEL.nazwisko FROM SAMOCHODY S;


--07

DECLARE
    TYPE t_tytuly IS VARRAY(10) OF VARCHAR2(50);
     tytuly t_tytuly := t_tytuly('');
BEGIN
    tytuly(1) := 'Tytul 1';
    tytuly.EXTEND(4);
    FOR i IN 2..5
        LOOP
            tytuly(i) := 'Tytul_' || i;
        END LOOP;
    FOR i IN tytuly.FIRST()..tytuly.LAST()
        LOOP
            DBMS_OUTPUT.PUT_LINE(tytuly(i));
        END LOOP;
    tytuly.TRIM(2);
    FOR i IN tytuly.FIRST()..tytuly.LAST()
        LOOP
            DBMS_OUTPUT.PUT_LINE(tytuly(i));
        END LOOP;
END;

--09

DECLARE
    TYPE t_miesiace IS TABLE OF VARCHAR2(20);
    miesiace t_miesiace := t_miesiace();
BEGIN
    miesiace.extend(2);
    miesiace(1) := 'STYCZEN';
    miesiace(2) := 'LUTY';

    miesiace.extend(6);
    miesiace(3) := 'MARZEC';
    miesiace(4) := 'KWIECIEN';
    miesiace(5) := 'MAJ';
    miesiace(6) := 'CZERWIEC';
    miesiace(7) := 'LIPIEC';
    miesiace(8) := 'SIERPIEN';

    FOR i IN miesiace.FIRST()..miesiace.LAST()
        LOOP
            DBMS_OUTPUT.PUT_LINE(miesiace(i));
        END LOOP;

    miesiace.DELETE(3, 7);

    FOR i IN miesiace.FIRST()..miesiace.LAST()
        LOOP
            IF miesiace.EXISTS(i) THEN
                DBMS_OUTPUT.PUT_LINE(miesiace(i));
            END IF;
        END LOOP;
END;


--11

CREATE TYPE koszyk AS TABLE OF VARCHAR2(20);
/
CREATE TYPE zakup AS OBJECT (
 nazwa VARCHAR2(50),
 koszyk_produktow koszyk );
/
CREATE TABLE zakupy OF zakup NESTED TABLE koszyk_produktow STORE AS koszyk_tabl ;

INSERT INTO zakupy VALUES
('A',koszyk('a','b','c'));

INSERT INTO zakupy VALUES
('B',koszyk('a','b','c'));

INSERT INTO zakupy VALUES
('C',koszyk('d','e'));

INSERT INTO zakupy VALUES
('D',koszyk('f','g','h', 'i'));

SELECT * FROM zakupy;

DELETE
FROM zakupy z WHERE (SELECT COUNT(*)
       FROM TABLE (z.koszyk_produktow) k
       WHERE k.COLUMN_VALUE = 'a') > 0;
       
SELECT * FROM zakupy;

--22

CREATE TABLE PISARZE (
 ID_PISARZA NUMBER PRIMARY KEY,
 NAZWISKO VARCHAR2(20),
 DATA_UR DATE );

CREATE TABLE KSIAZKI (
 ID_KSIAZKI NUMBER PRIMARY KEY,
 ID_PISARZA NUMBER NOT NULL REFERENCES PISARZE,
 TYTUL VARCHAR2(50),
 DATA_WYDANIE DATE );
 
INSERT INTO PISARZE VALUES(10,'SIENKIEWICZ',DATE '1880-01-01');
INSERT INTO PISARZE VALUES(20,'PRUS',DATE '1890-04-12');
INSERT INTO PISARZE VALUES(30,'ZEROMSKI',DATE '1899-09-11');

INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(10,10,'OGNIEM I MIECZEM',DATE '1990-01-05');
INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(20,10,'POTOP',DATE '1975-12-09');
INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(30,10,'PAN WOLODYJOWSKI',DATE '1987-02-15');
INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(40,20,'FARAON',DATE '1948-01-21');
INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(50,20,'LALKA',DATE '1994-08-01');
INSERT INTO KSIAZKI(ID_KSIAZKI,ID_PISARZA,TYTUL,DATA_WYDANIE) VALUES(60,30,'PRZEDWIOSNIE',DATE '1938-02-02');

CREATE TYPE PISARZ AS OBJECT (
    ID_PISARZA NUMBER,
    NAZWISKO VARCHAR2(20),
    DATA_UR DATE,
    KSIAZKI NUMBER,
    MEMBER FUNCTION ILE_KSIAZEK RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY PISARZ AS
    MEMBER FUNCTION ILE_KSIAZEK RETURN NUMBER IS
    BEGIN
        RETURN KSIAZKI;
    END;
END;

CREATE TYPE KSIAZKA AS OBJECT (
    ID_KSIAZKI NUMBER,
    AUTOR REF PISARZ,
    TYTUL VARCHAR2(50),
    DATA_WYDANIA DATE,
    MEMBER FUNCTION WIEK RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY KSIAZKA AS
    MEMBER FUNCTION WIEK RETURN NUMBER IS
    BEGIN
        RETURN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM DATA_WYDANIA);
    END;
END;

CREATE OR REPLACE VIEW PISARZE_V OF PISARZ
WITH OBJECT IDENTIFIER(ID_PISARZA)
AS SELECT ID_PISARZA, NAZWISKO, DATA_UR, (select count(*) FROM KSIAZKI WHERE ID_PISARZA=P.ID_PISARZA) AS KSIAZKI FROM PISARZE P;

CREATE OR REPLACE VIEW KSIAZKI_VIEW OF KSIAZKA
WITH OBJECT IDENTIFIER(ID_KSIAZKI)
AS SELECT ID_KSIAZKI, MAKE_REF(PISARZE_V, ID_PISARZA), TYTUL, DATA_WYDANIE FROM KSIAZKI;

--23

CREATE TYPE AUTO AS OBJECT (
 MARKA VARCHAR2(20),
 MODEL VARCHAR2(20),
 KILOMETRY NUMBER,
 DATA_PRODUKCJI DATE,
 CENA NUMBER(10,2),
 MEMBER FUNCTION WARTOSC RETURN NUMBER
) NOT FINAL;

CREATE OR REPLACE TYPE BODY AUTO AS
 MEMBER FUNCTION WARTOSC RETURN NUMBER IS
 WIEK NUMBER;
 WARTOSC NUMBER;
 BEGIN
 WIEK := ROUND(MONTHS_BETWEEN(SYSDATE,DATA_PRODUKCJI)/12);
 WARTOSC := CENA - (WIEK * 0.1 * CENA);
 IF (WARTOSC < 0) THEN
 WARTOSC := 0;
 END IF;
 RETURN WARTOSC;
 END WARTOSC;
END;


CREATE TABLE AUTA OF AUTO;
INSERT INTO AUTA VALUES (AUTO('FIAT','BRAVA',60000,DATE '1999-11-30',25000));
INSERT INTO AUTA VALUES (AUTO('FORD','MONDEO',80000,DATE '1997-05-10',45000));
INSERT INTO AUTA VALUES (AUTO('MAZDA','323',12000,DATE '2000-09-22',52000));


CREATE OR REPLACE TYPE AUTO_OSOBOWE UNDER AUTO(
    LICZBA_MIEJSC NUMBER,
    KLIMATYZACJA NUMBER,
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY AUTO_OSOBOWE AS
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER IS
        WARTOSC NUMBER;
    BEGIN
        WARTOSC := (SELF AS AUTO).WARTOSC();
        IF (KLIMATYZACJA = 1) THEN
            WARTOSC := WARTOSC * 1.5;
        END IF;
        RETURN WARTOSC;
    END;
END;


CREATE TYPE AUTO_CIEZAROWE UNDER AUTO (
    MAKSYMALNA_LADOWNOSC NUMBER,
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY AUTO_CIEZAROWE AS
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER IS
        WARTOSC NUMBER;
    BEGIN
        WARTOSC := (SELF AS AUTO).WARTOSC();
        IF (MAKSYMALNA_LADOWNOSC > 10) THEN
            WARTOSC := WARTOSC * 2;
        END IF;
        RETURN WARTOSC;
    END;
END;

INSERT INTO AUTA VALUES (AUTO_OSOBOWE('Osobowe1', '1', 100000, DATE '2021-03-25', 120000, 5, 1));
INSERT INTO AUTA VALUES (AUTO_OSOBOWE('Osobowe2', '2', 200000, DATE '2020-04-25', 80000, 4, 0));
INSERT INTO AUTA VALUES (AUTO_CIEZAROWE('Ciezarowe1', '1', 250000, DATE '2019-05-25', 45000, 5));
INSERT INTO AUTA VALUES (AUTO_CIEZAROWE('Ciezarowe2', '2', 300000, DATE '2018-10-25', 79000, 12));

SELECT A.MARKA, A.WARTOSC() FROM AUTA A;
